apiVersion: v1
data:
  application.properties: |+
    spring.profiles.active=auth0

    # Database
    spring.datasource.driverClassName=org.postgresql.Driver
    spring.jpa.database=POSTGRESQL
    spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
    spring.jpa.properties.hibernate.boot.allow_jdbc_metadata_access=false
    spring.jpa.open-in-view=false
    spring.cloud.gcp.sql.database-name=baba
    spring.cloud.gcp.sql.instance-connection-name={{ .Values.gcp.databaseInstance }}

    spring.flyway.table=schema_version

    # Spring Web
    server.port={{ .Values.service.http.internalPort }}
    server.compression.enabled=true
    server.shutdown=graceful
    spring.lifecycle.timeout-per-shutdown-phase=10s

    # Spring Mail
    spring.mail.properties.mail.smtp.starttls.enable=true
    spring.mail.port=2525
    spring.mail.properties.mail.smtp.writetimeout=5000
    spring.mail.properties.mail.smtp.ssl.enable=false
    spring.mail.host=smtp.postmarkapp.com
    spring.mail.properties.mail.smtp.timeout=3000
    spring.mail.properties.mail.smtp.connecttimeout=5000
    new.user.email.enabled=true
    new.user.email.from={{ .Values.mail.newUserFrom}}

    # Auth0
    iam.auth0.admin.domain={{ .Values.auth0.admin.domain }}
    iam.auth0.admin.client.id={{ .Values.auth0.admin.client.id }}

    # OAuth2 Resource Server
    baba.oauth2.resourceserver.auth0.ror.claim.namespace=https://ror.entur.io/

    # OAuth2 Resource Server for Entur Partner tenant
    baba.oauth2.resourceserver.auth0.entur.partner.jwt.issuer-uri={{ .Values.auth0.entur.partner.url }}
    baba.oauth2.resourceserver.auth0.entur.partner.jwt.audience={{ .Values.auth0.ror.audience }}

    # OAuth2 Resource Server for Entur internal tenant
    baba.oauth2.resourceserver.auth0.entur.internal.jwt.issuer-uri={{ .Values.auth0.entur.internal.url }}
    baba.oauth2.resourceserver.auth0.entur.internal.jwt.audience={{ .Values.auth0.ror.audience }}

    # OAuth2 Resource Server for RoR tenant
    baba.oauth2.resourceserver.auth0.ror.jwt.issuer-uri={{ .Values.auth0.ror.url }}
    baba.oauth2.resourceserver.auth0.ror.jwt.audience={{ .Values.auth0.ror.audience }}

    # Authorization
    baba.security.authorization-service=token-based
    baba.security.role.assignment.extractor={{ .Values.roleAssignmentExtractor }}

    # Actuator
    management.server.port=9001
    management.endpoints.access.default=none
    management.endpoint.info.enabled=true
    management.endpoint.health.enabled=true
    management.endpoint.health.group.readiness.include=readinessState,db
    management.endpoint.prometheus.enabled=true
    management.endpoints.web.exposure.include=info,health,prometheus

kind: ConfigMap
metadata:
  name: {{ template "baba.name" . }}-config
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "common.labels" . | indent 4 }}
